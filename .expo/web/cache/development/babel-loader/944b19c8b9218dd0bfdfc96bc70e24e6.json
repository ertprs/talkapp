{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\raphael\\\\react\\\\talkapp\\\\src\\\\ChatScreen\\\\index.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport styles from \"./styles\";\nvar messages = [{\n  id: '1',\n  user: 'Cliente',\n  date: '22h33m',\n  message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...'\n}, {\n  id: '2',\n  user: 'Suporte',\n  date: '22h33m',\n  message: 'Texto da mensagem de resposta'\n}, {\n  id: '3',\n  user: 'Cliente',\n  date: '22h33m',\n  message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...'\n}, {\n  id: '4',\n  user: 'Suporte',\n  date: '22h33m',\n  message: 'Texto da mensagem de resposta'\n}, {\n  id: '51',\n  user: 'Cliente',\n  date: '22h33m',\n  message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...'\n}, {\n  id: '6',\n  user: 'Suporte',\n  date: '22h33m',\n  message: 'Texto da mensagem de resposta'\n}, {\n  id: '7',\n  user: 'Cliente',\n  date: '22h33m',\n  message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...'\n}, {\n  id: '8',\n  user: 'Suporte',\n  date: '22h33m',\n  message: 'Texto da mensagem de resposta'\n}, {\n  id: '9',\n  user: 'Cliente',\n  date: '22h33m',\n  message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...'\n}, {\n  id: '10',\n  user: 'Suporte',\n  date: '22h33m',\n  message: 'Texto da mensagem de resposta'\n}];\n\nvar ChatScreen = function ChatScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"SUPORTE\"), React.createElement(Image, {\n    source: require(\"../images/logo/Logo.png\"),\n    style: styles.headerLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.chatView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.messageSended,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: styles.messageSendedDataView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.messageSendedData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, item.user), React.createElement(Text, {\n        style: styles.messageSendedData,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }, item.date)), React.createElement(View, {\n        style: styles.messageSendedTextView,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.messageSendedText,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 19\n        }\n      }, item.message)));\n    },\n    inverted: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.messageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#68A0C9\",\n    placeholder: \"DIGITE SUA MENSAGEM\",\n    onChangeText: function onChangeText(message) {\n      return setMessage(message);\n    },\n    defaultValue: message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"send\",\n    size: 24,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  })))), React.createElement(StatusBar, {\n    style: \"dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChatScreen;","map":{"version":3,"sources":["E:/raphael/react/talkapp/src/ChatScreen/index.js"],"names":["StatusBar","MaterialIcons","React","useState","styles","messages","id","user","date","message","ChatScreen","setMessage","container","header","text","require","headerLogo","chatView","item","messageSended","messageSendedDataView","messageSendedData","messageSendedTextView","messageSendedText","messageInput","input","button"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport React, { useState } from 'react';\r\nimport { Image, StyleSheet, Text, View, ScrollView, TextInput, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport styles from './styles';\r\n\r\n\r\nconst messages = [\r\n  {\r\n    id: '1',\r\n    user: 'Cliente',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...',\r\n  },\r\n  {\r\n    id: '2',\r\n    user: 'Suporte',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem de resposta',\r\n  },\r\n  {\r\n    id: '3',\r\n    user: 'Cliente',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...',\r\n  },\r\n  {\r\n    id: '4',\r\n    user: 'Suporte',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem de resposta',\r\n  },\r\n  {\r\n    id: '51',\r\n    user: 'Cliente',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...',\r\n  },\r\n  {\r\n    id: '6',\r\n    user: 'Suporte',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem de resposta',\r\n  },\r\n  {\r\n    id: '7',\r\n    user: 'Cliente',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...',\r\n  },\r\n  {\r\n    id: '8',\r\n    user: 'Suporte',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem de resposta',\r\n  },\r\n  {\r\n    id: '9',\r\n    user: 'Cliente',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem do cliente para o suporte, relacionado à ajuda ou outras requisições, mensagem de exemplo, teste etc...',\r\n  },\r\n  {\r\n    id: '10',\r\n    user: 'Suporte',\r\n    date: '22h33m',\r\n    message: 'Texto da mensagem de resposta',\r\n  },\r\n];\r\n\r\nconst ChatScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.text}>SUPORTE</Text>\r\n        <Image source={require('../images/logo/Logo.png')} style={styles.headerLogo} />\r\n      </View>\r\n      <View style={styles.chatView}>\r\n        <ScrollView>\r\n          <View>\r\n            <FlatList\r\n            data={messages}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.messageSended}>\r\n                <View style={styles.messageSendedDataView}>\r\n                  <Text style={styles.messageSendedData}>{item.user}</Text>\r\n                  <Text style={styles.messageSendedData}>{item.date}</Text>\r\n                </View>\r\n                <View style={styles.messageSendedTextView}>\r\n                  <Text style={styles.messageSendedText}>\r\n                    {item.message}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n            )}\r\n            inverted={true}\r\n            keyExtractor={item => item.id}\r\n            />\r\n          </View>\r\n        </ScrollView>\r\n        <View style={styles.messageInput}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholderTextColor=\"#68A0C9\"\r\n            placeholder=\"DIGITE SUA MENSAGEM\"\r\n            onChangeText={message => setMessage(message)}\r\n            defaultValue={message}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={ () => {} }>\r\n            <MaterialIcons name=\"send\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      <StatusBar style=\"dark\"/>\r\n    </View>\r\n  );\r\n}\r\nexport default ChatScreen;\r\n\r\n"]},"metadata":{},"sourceType":"module"}